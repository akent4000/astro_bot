"""
Django settings for AstroBot project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
from dotenv import load_dotenv
import os
from tgbot.logics.constants import Constants

load_dotenv()
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('DJANGO_SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ["localhost", Constants.APP_DOMAIN, "103.249.132.128"]

USE_I18N = True
LANGUAGE_CODE = 'ru'
TIME_ZONE = 'UTC'
USE_L10N = True
USE_TZ = True
CSRF_COOKIE_SECURE = True
SESSION_COOKIE_SECURE = True
CSRF_TRUSTED_ORIGINS = [
    Constants.APP_URL
]

STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / 'static']
STATIC_ROOT = '/www/static/'


# Application definition

INSTALLED_APPS = [
    'admin_reorder',
    'nested_inline',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'tgbot',
    'rangefilter',
    'solo',
]

MIDDLEWARE = [
    'admin_reorder.middleware.ModelAdminReorder',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.locale.LocaleMiddleware',    
]

ROOT_URLCONF = 'AstroBot.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/1",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}

WSGI_APPLICATION = 'AstroBot.wsgi.application'

CSP_DEFAULT_SRC = ("'self'",)
CSP_SCRIPT_SRC  = ("'self'",)
CSP_STYLE_SRC   = ("'self'",)

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DBNAME = os.getenv('DBNAME')
DBUSER = os.getenv('DBUSER')
DBPASS = os.getenv('DBPASS')

DATABASES = {
    'default': {
        'ENGINE':   'django.db.backends.postgresql',
        'NAME':     DBNAME,
        'USER':     DBUSER,
        'PASSWORD': DBPASS,
        'HOST':     'localhost',
        'PORT':     '5432',
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

ADMIN_REORDER = (
    # üöÄ APOD
    {
        'app': 'tgbot',
        'label': 'üöÄ APOD',
        'models': (
            'tgbot.ApodApiKey',
            'tgbot.ApodFile',
        ),
    },
    # üì∞ –°—Ç–∞—Ç—å–∏
    {
        'app': 'tgbot',
        'label': 'üì∞ –°—Ç–∞—Ç—å–∏',
        'models': (
            'tgbot.ArticlesSection',
            'tgbot.ArticlesSubsection',
            'tgbot.Article',
        ),
    },
    # ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞
    {
        'app': 'tgbot',
        'label': '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞',
        'models': (
            'tgbot.TelegramBotToken',
            'tgbot.Configuration',
        ),
    },
    # üìñ –ì–ª–æ—Å—Å–∞—Ä–∏–π
    {
        'app': 'tgbot',
        'label': 'üìñ –ì–ª–æ—Å—Å–∞—Ä–∏–π',
        'models': (
            'tgbot.Glossary',
        ),
    },
    # üí° –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã
    {
        'app': 'tgbot',
        'label': 'üí° –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã',
        'models': (
            'tgbot.InterestingFact',
            'tgbot.DailySubscription',
        ),
    },
    # üîë SSH –∏ –°–µ—Ä–≤–µ—Ä
    {
        'app': 'tgbot',
        'label': 'üîë SSH –∏ –°–µ—Ä–≤–µ—Ä',
        'models': (
            'tgbot.SSHKey',
            'tgbot.Server',
        ),
    },
    # üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
    {
        'app': 'tgbot',
        'label': 'üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏',
        'models': (
            'tgbot.TelegramUser',
            'tgbot.SentMessage',
        ),
    },
    # üìö –ö–≤–∏–∑—ã
    {
        'app': 'tgbot',
        'label': 'üìö –ö–≤–∏–∑—ã',
        'models': (
            'tgbot.QuizTopic',
            'tgbot.QuizLevel',
            'tgbot.Quiz',
            'tgbot.Question',
            'tgbot.Choice',
            'tgbot.UserQuizSession',
            'tgbot.UserQuizAnswer',
        ),
    },
)